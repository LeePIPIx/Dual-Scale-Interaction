# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]                   [1,3,640,640]
  - [-1, 1, HGStem, [32, 48]] # 0-P2/4            0  [1,48,160,160]
  - [-1, 6, HGBlock, [48, 128, 3]] # stage 1      1  [1, 128, 160, 160]

  - [-1, 1, DWConv, [128, 3, 2, 1, False]] # 2-P3/8  2 [1, 128, 80, 80]
  - [-1, 6, HGBlock, [96, 512, 3]] # stage 2         3 [1, 512, 80, 80]

  - [-1, 1, DWConv, [512, 3, 2, 1, False]] # 4-P3/16 4 [1, 512, 40, 40]
  - [-1, 6, HGBlock, [192, 1024, 5, True, False]] # cm, c2, k, light, shortcut 5 [1, 1024, 40, 40]
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]                             # 6 [1, 1024, 40, 40]
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]] # stage 3                     7 [1, 1024, 40, 40]

  - [-1, 1, DWConv, [1024, 3, 2, 1, False]] # 8-P4/32                          8 [1, 1024, 20, 20]
  - [-1, 6, HGBlock, [384, 2048, 5, True, False]] # stage 4                    9 [1, 2048, 20, 20]

head:
  - [-1, 1, Positioning, []]                                                    # 10 [1,2048,20,20]
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]] #  input_proj.2              11 [1,256,20,20]
  - [-1, 1, AIFI, [1024, 8]]            #                                      12 [1,256,20,20]
  - [-1, 1, Conv, [256, 1, 1]]  # 12, Y5, lateral_convs.0                       13 [1,256,20,20]

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                             #   14 [1,256,40,40]
  - [7, 1, Conv, [512, 3, 2]] # 14 input_proj.1                            #   15 [1,512,20,20]
  - [[-1,-2], 1, Focusing, []]                                          #   16 [1,256,40,40]
  - [-1, 1, Conv, [256, 1, 1]] # 17, Y4, lateral_convs.1                   #   17 [1,256,40,40]

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]                             #   18 [1,256,80,80]
  - [3, 1, Conv, [512, 3, 2]] # 19 input_proj.0                            #   19 [1,512,40,40]
  - [[-1,-2], 1, Focusing, []]                                             #   20 [1,256,80,80]

  - [-1, 1, Conv, [256, 3, 2]] # 22, downsample_convs.0                    #   21 [1,256,40,40]
  - [[-1, 17], 1, Concat, [1]] # cat Y4                                    #   22 [1,512,40,40]
  - [-1, 3, RepC3, [256]] # F4 (24), pan_blocks.0                          #   23 [1,256,40,40]

  - [-1, 1, Conv, [256, 3, 2]] # 25, downsample_convs.1                    #   24 [1,256,20,20]
  - [[-1, 12], 1, Concat, [1]] # cat Y5                                    #   25 [1,512,20,20]
  - [-1, 3, RepC3, [256]] # F5 (27), pan_blocks.1                          #   26 [1,256,20,20]

  - [[20, 23, 26], 1, RTDETRDecoder, [nc]] # Detect(P3, P4, P5)
